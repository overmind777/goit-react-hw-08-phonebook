{"version":3,"file":"static/js/926.d128a225.chunk.js","mappings":"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","sources":["redux/selectors.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","components/ContactsPage/ContactsPage.jsx","pages/Contacts.js"],"sourcesContent":["export const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilter = state => state.filter;\n","import styled from 'styled-components';\n\nexport const WrapperStyled = styled.div`\n  padding: 15px;\n  width: 350px;\n  border: 2px solid black;\n`;\n\nexport const FormStyled = styled.form`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const LabelStyled = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n  font-weight: 500;\n  font-size: 17px;\n  &.label:not(:last-child) {\n    margin-bottom: 20px;\n  }\n`;\nexport const InputStyled = styled.input`\n  padding: 2px;\n  width: 170px;\n`;\n\nexport const ButtonStyled = styled.button`\n  margin-top: 20px;\n  padding: 2px;\n  width: 100px;\n  cursor: pointer;\n`;\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { addContact } from 'redux/operations';\nimport { selectContacts } from 'redux/selectors';\n\nimport {\n  ButtonStyled,\n  FormStyled,\n  InputStyled,\n  LabelStyled,\n  WrapperStyled,\n} from './ContactForm.styled';\n\nexport function ContactForm() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleInputChange = e => {\n    switch (e.currentTarget.name) {\n      case 'name':\n        setName(e.currentTarget.value);\n        break;\n\n      case 'number':\n        setNumber(e.currentTarget.value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    createContact(name, number);\n    setName('');\n    setNumber('');\n  };\n\n  const createContact = (name, number) => {\n    if (!contacts.find(el => el.name === name)) {\n      const newContact = {\n        name,\n        number,\n      };\n      dispatch(addContact(newContact));\n    } else {\n      alert(`${name} is already in contacts.`);\n    }\n  };\n\n  return (\n    <WrapperStyled>\n      <FormStyled onSubmit={handleSubmit}>\n        <LabelStyled>\n          Name\n          <InputStyled\n            type=\"text\"\n            name=\"name\"\n            required\n            value={name}\n            onChange={handleInputChange}\n          />\n        </LabelStyled>\n        <LabelStyled>\n          Number\n          <InputStyled\n            type=\"tel\"\n            name=\"number\"\n            required\n            value={number}\n            onChange={handleInputChange}\n          />\n        </LabelStyled>\n        <ButtonStyled type=\"submit\">Add contact</ButtonStyled>\n      </FormStyled>\n    </WrapperStyled>\n  );\n}\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport PropTypes from 'prop-types';\n\nimport { deleteContact } from 'redux/operations';\n\nimport styled from 'styled-components';\n\nfunction ContactItem({ name, number, contactId }) {\n  const dispatch = useDispatch();\n\n  return (\n    <>\n      <ItemStyled>\n        <p>\n          {name}: {number}\n        </p>\n        <ButtonStyled\n          type=\"button\"\n          onClick={() => dispatch(deleteContact(contactId))}\n        >\n          delete\n        </ButtonStyled>\n      </ItemStyled>\n    </>\n  );\n}\n\nContactItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  contactId: PropTypes.string.isRequired,\n};\n\nexport default ContactItem;\n\nconst ItemStyled = styled.li`\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  font-weight: 500;\n  font-size: 17px;\n`;\n\nconst ButtonStyled = styled.button`\n  font-size: 12px;\n  cursor: pointer;\n`;\n","import React from 'react';\n\nimport ContactItem from './ContactItem/ContactItem';\nimport { useSelector } from 'react-redux';\nimport { selectContacts, selectFilter } from 'redux/selectors';\n\nimport styled from 'styled-components';\n\nfunction ContactList() {\n  const filter = useSelector(selectFilter);\n  const contacts = useSelector(selectContacts);\n\n  const filteredContacts = () => {\n    const normalizedFilter = filter.toLocaleLowerCase();\n\n    return contacts.filter(e =>\n      e.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  return (\n    <div>\n      <ListStyled>\n        {filteredContacts().map(({ id, name, number }) => {\n          return (\n            <ContactItem key={id} contactId={id} name={name} number={number} />\n          );\n        })}\n      </ListStyled>\n    </div>\n  );\n}\n\nexport default ContactList;\n\nconst ListStyled = styled.ul`\n  padding-left: 15px;\n  list-style: none;\n`;\n","import React from 'react';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { updateFilter } from 'redux/filterSlice';\nimport { selectFilter } from 'redux/selectors';\n\nimport styled from 'styled-components';\n\nfunction Filter() {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  const handleFilterChange = e => {\n    dispatch(updateFilter(e.currentTarget.value));\n  };\n\n  return (\n    <div>\n      <LabelStyled>\n        Find contacts by name\n        <InputStyled\n          type=\"text\"\n          name=\"filter\"\n          value={filter}\n          onChange={handleFilterChange}\n        />\n      </LabelStyled>\n    </div>\n  );\n}\n\nexport default Filter;\n\nconst LabelStyled = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 7px;\n  font-weight: 500;\n  font-size: 17px;\n`;\n\nconst InputStyled = styled.input`\n  padding: 2px;\n  width: 170px;\n`;\n","import React from 'react';\n\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport ContactList from 'components/ContactList/ContactList';\nimport Filter from 'components/Filter/Filter';\nimport { fetchContacts } from 'redux/operations';\nimport { selectError, selectIsLoading } from 'redux/selectors';\n\nimport styled from 'styled-components';\n\nexport default function ContactsPage() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <WrapperStyled>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <WrapperStyled>\n        <Filter />\n        {!error && isLoading && <b>Loading...</b>}\n      </WrapperStyled>\n      {error ? <b>{error}</b> : <ContactList />}\n    </WrapperStyled>\n  );\n}\n\nconst WrapperStyled = styled.div`\n  padding: 0 20px;\n`;\n\n// .container div {\n//   display: flex;\n//   gap: 60px;\n//   align-items: flex-end;\n// }\n\n// .container div b {\n//   font-size: 20px;\n// }\n","import ContactsPage from 'components/ContactsPage/ContactsPage';\nimport React from 'react';\n\nexport default function Contacts() {\n  return (\n    <div>\n      <ContactsPage />\n    </div>\n  );\n}\n"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilter","filter","WrapperStyled","styled","FormStyled","LabelStyled","InputStyled","ButtonStyled","ContactForm","dispatch","useDispatch","useSelector","useState","name","setName","number","setNumber","handleInputChange","e","currentTarget","value","createContact","find","el","alert","newContact","addContact","onSubmit","preventDefault","type","required","onChange","contactId","ItemStyled","onClick","deleteContact","ListStyled","normalizedFilter","toLocaleLowerCase","toLowerCase","includes","filteredContacts","map","id","updateFilter","ContactsPage","useEffect","fetchContacts","Contacts"],"sourceRoot":""}